<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Echo_Sxl</title>
  <subtitle>-=</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.songxiaolang.com/"/>
  <updated>2018-02-02T13:42:42.349Z</updated>
  <id>http://www.songxiaolang.com/</id>
  
  <author>
    <name>Echo_Sxl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring使用Quartz定时调度Job无法Autowired注入Service的解决方案</title>
    <link href="http://www.songxiaolang.com/2018/01/22/Spring_Quartz_Job_Autowired/"/>
    <id>http://www.songxiaolang.com/2018/01/22/Spring_Quartz_Job_Autowired/</id>
    <published>2018-01-22T05:27:22.000Z</published>
    <updated>2018-02-02T13:42:42.349Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring使用Quartz定时调度Job无法Autowired注入Service的解决方案&quot;&gt;&lt;a href=&quot;#Spring使用Quartz定时调度Job无法Autowired注入Service的解决方案&quot; class=&quot;headerlink&quot; title=&quot;Spring使用Quartz定时调度Job无法Autowired注入Service的解决方案&quot;&gt;&lt;/a&gt;Spring使用Quartz定时调度Job无法Autowired注入Service的解决方案&lt;/h1&gt;&lt;h2 id=&quot;1-当时我有个项目要使用调度，所以选择Spring-Quartz，但是遇到了问题就是无法Autowired注入Service。&quot;&gt;&lt;a href=&quot;#1-当时我有个项目要使用调度，所以选择Spring-Quartz，但是遇到了问题就是无法Autowired注入Service。&quot; class=&quot;headerlink&quot; title=&quot;1. 当时我有个项目要使用调度，所以选择Spring-Quartz，但是遇到了问题就是无法Autowired注入Service。&quot;&gt;&lt;/a&gt;1. 当时我有个项目要使用调度，所以选择Spring-Quartz，但是遇到了问题就是无法Autowired注入Service。&lt;/h2&gt;&lt;h2 id=&quot;2-利用Quartz可以实现定时任务，但在跟Spring整合后，直接在Job中注解方式注入Service后运行却报空指针异常。&quot;&gt;&lt;a href=&quot;#2-利用Quartz可以实现定时任务，但在跟Spring整合后，直接在Job中注解方式注入Service后运行却报空指针异常。&quot; class=&quot;headerlink&quot; title=&quot;2. 利用Quartz可以实现定时任务，但在跟Spring整合后，直接在Job中注解方式注入Service后运行却报空指针异常。&quot;&gt;&lt;/a&gt;2. 利用Quartz可以实现定时任务，但在跟Spring整合后，直接在Job中注解方式注入Service后运行却报空指针异常。&lt;/h2&gt;&lt;p&gt;原因是Quartz初始化是自己的JobContext，不同于Spring的ApplicationContext，所以无法直接注入&lt;/p&gt;
&lt;h3 id=&quot;3-具体做法是直接getBean-的方式来获取service的&quot;&gt;&lt;a href=&quot;#3-具体做法是直接getBean-的方式来获取service的&quot; class=&quot;headerlink&quot; title=&quot;3.具体做法是直接getBean()的方式来获取service的&quot;&gt;&lt;/a&gt;3.具体做法是直接getBean()的方式来获取service的&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DispatchWork&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Job&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     @Override&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; execute(JobExecutionContext jobExecutionContext) throws JobExecutionException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; jobName = jobExecutionContext.getJobDetail().getKey().getName();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; group = jobExecutionContext.getTrigger().getKey().getGroup();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         RunKettleSerive  runKettleSerive= SpringContextHolder.getBean(RunKettleSerive.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         runKettleSerive.runKettleScript(jobName,group);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/*  runKettleSerive.runKettleScript(jobName,group);*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-关键代码就是RunKettleSerive-runKettleSerive-SpringContextHolder-getBean-RunKettleSerive-class-。&quot;&gt;&lt;a href=&quot;#4-关键代码就是RunKettleSerive-runKettleSerive-SpringContextHolder-getBean-RunKettleSerive-class-。&quot; class=&quot;headerlink&quot; title=&quot;4.关键代码就是RunKettleSerive  runKettleSerive= SpringContextHolder.getBean(RunKettleSerive.class)。&quot;&gt;&lt;/a&gt;4.关键代码就是RunKettleSerive  runKettleSerive= SpringContextHolder.getBean(RunKettleSerive.class)。&lt;/h3&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://www.songxiaolang.com/categories/Spring/"/>
    
    
      <category term="文章" scheme="http://www.songxiaolang.com/tags/%E6%96%87%E7%AB%A0/"/>
    
      <category term="Quartz" scheme="http://www.songxiaolang.com/tags/Quartz/"/>
    
  </entry>
  
  <entry>
    <title>AJAX POST数据中有特殊符号导致数据丢失的解决方法</title>
    <link href="http://www.songxiaolang.com/2016/09/22/data_exists_special_symbols/"/>
    <id>http://www.songxiaolang.com/2016/09/22/data_exists_special_symbols/</id>
    <published>2016-09-22T05:27:22.000Z</published>
    <updated>2017-09-25T09:03:34.738Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Ajax传送数据时，当数据中存在加号-、连接符-amp-或者百分号-时，服务器端接收数据时会丢失数据。分析Ajax传送数据的格式与Javascript的语法：&quot;&gt;&lt;a href=&quot;#使用Ajax传送数据时，当数据中存在加号-、连接符-amp-或者百分号-时，服务器端接收数据时会丢失数据。分析Ajax传送数据的格式与Javascript的语法：&quot; class=&quot;headerlink&quot; title=&quot;使用Ajax传送数据时，当数据中存在加号(+)、连接符(&amp;amp;)或者百分号(%)时，服务器端接收数据时会丢失数据。分析Ajax传送数据的格式与Javascript的语法：&quot;&gt;&lt;/a&gt;使用Ajax传送数据时，当数据中存在加号(+)、连接符(&amp;amp;)或者百分号(%)时，服务器端接收数据时会丢失数据。分析Ajax传送数据的格式与Javascript的语法：&lt;/h1&gt;&lt;h2 id=&quot;1-“-”号：JavaScript解析为字符串连接符，所以服务器端接收数据时”-”会丢失变空格。&quot;&gt;&lt;a href=&quot;#1-“-”号：JavaScript解析为字符串连接符，所以服务器端接收数据时”-”会丢失变空格。&quot; class=&quot;headerlink&quot; title=&quot;1. “+”号：JavaScript解析为字符串连接符，所以服务器端接收数据时”+”会丢失变空格。&quot;&gt;&lt;/a&gt;1. “+”号：JavaScript解析为字符串连接符，所以服务器端接收数据时”+”会丢失变空格。&lt;/h2&gt;&lt;h2 id=&quot;2-“-amp-”号：JavaScript解析为变量连接符，所以服务器端接收数据时-amp-符号以后的数据都会丢失变空格。&quot;&gt;&lt;a href=&quot;#2-“-amp-”号：JavaScript解析为变量连接符，所以服务器端接收数据时-amp-符号以后的数据都会丢失变空格。&quot; class=&quot;headerlink&quot; title=&quot;2. “&amp;amp;”号：JavaScript解析为变量连接符，所以服务器端接收数据时&amp;amp;符号以后的数据都会丢失变空格。&quot;&gt;&lt;/a&gt;2. “&amp;amp;”号：JavaScript解析为变量连接符，所以服务器端接收数据时&amp;amp;符号以后的数据都会丢失变空格。&lt;/h2&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.songxiaolang.com/categories/JavaScript/"/>
    
    
      <category term="Ajax" scheme="http://www.songxiaolang.com/tags/Ajax/"/>
    
      <category term="文章" scheme="http://www.songxiaolang.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
</feed>
